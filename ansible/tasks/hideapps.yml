---
- name: Configuración de archivos .desktop
  hosts: localhost
  become: true  # Ejecutar como root
  vars:
    desktop_files:
      - nnn.desktop
      - btop.desktop
      - avahi-discover.desktop
      - assistant.desktop
      - designer.desktop
      - linguist.desktop
      - qdbusviewer.desktop
      - qv4l2.desktop
      - qvidcap.desktop
      - bvnc.desktop
      - bssh.desktop
      - fish.desktop
      - scrcpy-console.desktop
      - scrcpy.desktop

  tasks:
    - name: Crear directorio /usr/local/share/applications
      file:
        path: /usr/local/share/applications
        state: directory
        mode: '0755'

    - name: Verificar si los archivos .desktop existen en origen
      stat:
        path: "/usr/share/applications/{{ item }}"
      loop: "{{ desktop_files }}"
      register: origin_stats

    - name: Filtrar archivos disponibles en origen
      set_fact:
        available_files: "{{ origin_stats.results | selectattr('stat.exists', 'equalto', true) | map(attribute='item') | list }}"

    - name: Verificar si los archivos disponibles ya están en destino
      stat:
        path: "/usr/local/share/applications/{{ item }}"
      loop: "{{ available_files }}"
      register: destination_stats

    - name: Filtrar archivos que necesitan ser copiados
      set_fact:
        files_to_copy: "{{ destination_stats.results | selectattr('stat.exists', 'equalto', false) | map(attribute='item') | list }}"

    - name: Copiar archivos .desktop si es necesario
      copy:
        src: "/usr/share/applications/{{ item }}"
        dest: "/usr/local/share/applications/"
        mode: '0644'
      loop: "{{ files_to_copy }}"
      register: copy_results
      when: files_to_copy | length > 0
      ignore_errors: true  # Evitar fallos por archivos faltantes

    - name: Obtener lista combinada de archivos ya presentes o copiados
      set_fact:
        copied_or_existing_files: "{{ (destination_stats.results | selectattr('stat.exists', 'equalto', true) | map(attribute='item') | list) + (copy_results.results | selectattr('failed', 'equalto', false) | map(attribute='item') | list) | unique }}"

    - name: Añadir 'Hidden=true' a los archivos correspondientes
      lineinfile:
        path: "/usr/local/share/applications/{{ item }}"
        line: "Hidden=true"
        state: present
      loop: "{{ copied_or_existing_files }}"
      when: copied_or_existing_files | length > 0
