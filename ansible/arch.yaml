---
- name: Configuración del sistema en Arch Linux
  hosts: localhost
  vars:
    # Variables
    the_user: "{{ ansible_user_id }}"
    dotfiles: "https://raw.githubusercontent.com/Ciberbago/ciber-scripts/main/dotfiles"
    scriptsv: "https://raw.githubusercontent.com/Ciberbago/ciber-scripts/main/scripts"
    sdconfig: "https://raw.githubusercontent.com/Ciberbago/ciber-scripts/main/systemd"
    aur_pkgs:
      - clicker-git
      - gnome-extensions-cli
      - headsetcontrol-git
      - obs-cmd
      - webtorrent-mpv-hook
    pkgs:
      - extra/adw-gtk-theme
      - extra/android-tools
      - extra/baobab
      - core/base-devel
      - extra/bat
      - extra/bluez
      - extra/bluez-utils
      - extra/btop
      - extra/dkms
      - extra/ethtool
      - extra/eza
      - extra/fastfetch
      - extra/ffmpegthumbnailer
      - extra/file-roller
      - extra/firefox
      - extra/fish
      - extra/fisher
      - extra/flameshot
      - extra/fragments
      - extra/freerdp
      - extra/fzf
      - extra/gdm
      - extra/gdu
      - extra/git
      - extra/gnome-bluetooth-3.0
      - extra/gnome-calculator
      - extra/gnome-characters
      - extra/gnome-control-center
      - extra/gnome-disk-utility
      - extra/gnome-font-viewer
      - extra/gnome-keyring
      - extra/gnome-remote-desktop
      - extra/gnome-shell
      - extra/gnome-tweaks
      - extra/gnome-text-editor
      - extra/gvfs
      - extra/gvfs-smb
      - extra/handbrake
      - extra/imagemagick
      - extra/jre8-openjdk
      - extra/jre17-openjdk
      - extra/jre21-openjdk
      - extra/jq
      - extra/iperf3
      - core/less
      - extra/libmad
      - extra/libva-mesa-driver
      - core/linux-headers
      - core/linux-lts
      - extra/mangohud
      - extra/micro
      - extra/mpv-mpris
      - extra/nautilus
      - core/net-tools
      - extra/nnn
      - extra/noto-fonts-cjk
      - extra/ntfs-3g
      - extra/pacman-contrib
      - extra/p7zip
      - extra/pkgfile
      - extra/python-tqdm
      - extra/qt5ct
      - extra/qt6-base
      - extra/radeontop
      - extra/reflector
      - extra/remmina
      - extra/resources
      - extra/rocm-smi-lib
      - extra/rust
      - extra/scrcpy
      - extra/shotwell
      - extra/smbclient
      - multilib/steam
      - extra/tailscale
      - extra/tilix
      - core/traceroute
      - extra/ttf-firacode-nerd
      - extra/tumbler
      - extra/uget
      - extra/unrar
      - core/usbutils
      - extra/virtualbox
      - extra/virtualbox-guest-iso
      - extra/vulkan-radeon
      - extra/wget
      - extra/wl-clipboard
      - extra/xdg-desktop-portal-gnome
      - extra/yt-dlp
      - chaotic-aur/ani-cli
      - chaotic-aur/deadbeef-git
      - chaotic-aur/fsearch
      - chaotic-aur/insync
      - chaotic-aur/obs-studio-git
  tasks:
    # 1. Configuración de pacman.conf
    - name: Activar opciones en pacman.conf
      become: yes
      ansible.builtin.lineinfile:
        path: /etc/pacman.conf
        regexp: "^#?{{ item }}$"
        line: "{{ item }}"
        state: present
      loop:
        - Color
        - VerbosePkgLists
    
    - name: Configurar ParallelDownloads en pacman.conf
      become: yes
      ansible.builtin.lineinfile:
        path: /etc/pacman.conf
        regexp: "^#?ParallelDownloads =.*"
        line: "ParallelDownloads = 15"
        state: present

      notify: Actualizar multilib
    - name: "add multilib"
      become: yes
      lineinfile:
        dest: "/etc/pacman.conf"
        state: "present"
        line: "[multilib]"
        regexp: "^\\[multilib\\]"
        insertafter: "^#\\[multilib\\]"
    - name: "add multilib (cont)"
      become: yes
      lineinfile:
        dest: "/etc/pacman.conf"
        state: "present"
        line: "Include = /etc/pacman.d/mirrorlist"
        insertafter: "^\\[multilib\\]"
        regexp: "Include = /etc/pacman.d/mirrorlist"
    - name: Importar la clave de Chaotic AUR
      become: true
      community.general.pacman_key:
        id: EF925EA60F33D0CB85C44AD13056513887B78AEB  # Cambié 'key' a 'id'
        keyserver: keyserver.ubuntu.com
        state: present
    - name: Instalar el paquete chaotic-keyring
      become: true
      community.general.pacman:
        name: https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-keyring.pkg.tar.zst
        state: present
    
    - name: Instalar el paquete chaotic-mirrorlist
      become: true
      community.general.pacman:
        name: https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-mirrorlist.pkg.tar.zst
        state: present
    
    - name: Verificar si la sección [chaotic-aur] existe
      become: true
      command: grep -E '^\[chaotic-aur\]' /etc/pacman.conf
      register: chaotic_aur_section
      changed_when: false
      ignore_errors: true  # Ignora errores si la sección no existe
    
    - name: Verificar si la línea Include existe
      become: true
      command: grep -E 'Include = /etc/pacman.d/chaotic-mirrorlist' /etc/pacman.conf
      register: chaotic_aur_include
      changed_when: false
      ignore_errors: true  # Ignora errores si la línea no existe
    
    - name: Agregar el repositorio Chaotic AUR a pacman.conf
      become: true
      blockinfile:
        path: /etc/pacman.conf
        block: |
          [chaotic-aur]
          Include = /etc/pacman.d/chaotic-mirrorlist
        marker: ""
      when: chaotic_aur_section.rc != 0 and chaotic_aur_include.rc != 0  # Solo agrega si ambas líneas faltan

    - name: Actualizar los repositorios
      become: yes
      community.general.pacman:
        update_cache: true
        upgrade: true
    # 2. Configuración de makepkg.conf
    - name: Ajustar configuración de makepkg.conf
      become: yes
      ansible.builtin.lineinfile:
        path: /etc/makepkg.conf
        regexp: '^BUILDDIR=.*'
        line: 'BUILDDIR=/tmp/makepkg'
        state: present
    
    - name: Asegurar que PKGEXT esté configurado
      become: yes
      ansible.builtin.lineinfile:
        path: /etc/makepkg.conf
        regexp: '^PKGEXT=.*'
        line: "PKGEXT='.pkg.tar'"
        state: present
    
    - name: Asegurar que OPTIONS esté configurado
      become: yes
      ansible.builtin.lineinfile:
        path: /etc/makepkg.conf
        regexp: '^OPTIONS=.*'
        line: 'OPTIONS=(docs !strip !libtool !staticlibs emptydirs zipman purge !debug lto)'
        state: present
    
    - name: Asegurar que RUSTFLAGS esté configurado
      become: yes
      ansible.builtin.lineinfile:
        path: /etc/makepkg.conf
        regexp: '^RUSTFLAGS=.*'
        line: 'RUSTFLAGS="-C opt-level=2 -C target-cpu=native"'
        state: present
    
    - name: Asegurar que MAKEFLAGS esté configurado
      become: yes
      ansible.builtin.lineinfile:
        path: /etc/makepkg.conf
        regexp: '^MAKEFLAGS=.*'
        line: "MAKEFLAGS=\"-j{{ ansible_processor_vcpus | int - 1 }}\""
        state: present

    # 3. Instalación de paquetes
    - name: Instalar paquetes disponibles
      become: yes
      community.general.pacman:
        name: "{{ pkgs }}"
        state: present

    # 4. Crear directorios necesarios
    - name: Crear directorios necesarios
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - $HOME/.config/autostart
        - $HOME/.config/fish
        - $HOME/.config/mpv/fonts
        - $HOME/.config/mpv/scripts
        - $HOME/.config/obs-studio/basic/profiles/Untitled/
        - $HOME/.config/yay
        - $HOME/.config/flameshot
        - $HOME/gnome
        - $HOME/Screenshots/tmp
        - $HOME/.local/share/nautilus/scripts

    # 5. Descargar scripts
    - name: Descargar scripts for user
      ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode | default('0755') }}"
        force: yes
      loop:
        - { url: "{{ scriptsv }}/gnome.sh", dest: "$HOME/gnome.sh" }
        - { url: "{{ scriptsv }}/ext.sh", dest: "$HOME/ext.sh" }
        - { url: "{{ scriptsv }}/gnomeconfig.sh", dest: "$HOME/gnomeconfig.sh" }
        - { url: "{{ scriptsv }}/hideapps.sh", dest: "$HOME/hideapps.sh" }
        - { url: "{{ scriptsv }}/removeapps.sh", dest: "$HOME/removeapps.sh" }
        - { url: "{{ scriptsv }}/appimages.sh", dest: "$HOME/appimages.sh" }
        - { url: "{{ scriptsv }}/aur.sh", dest: "$HOME/aur.sh" }
        - { url: "{{ scriptsv }}/postinstall.sh", dest: "$HOME/postinstall.sh" }
        - { url: "{{ scriptsv }}/mediainfo.sh", dest: "$HOME/.local/share/nautilus/scripts/mediainfo.sh" }
    #5.1 Descargar scripts for root
    - name: Descargar scripts for root
      become: yes
      ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode | default('0755') }}"
        force: yes
      loop:
        - { url: "{{ scriptsv }}/wallpaper.sh", dest: "/usr/local/bin/wallpaper" }
    # 6. Descargar dotfiles
    - name: Descargar dotfiles for user
      ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode | default('0644') }}"
        force: yes
      loop:
      - { url: "{{ dotfiles }}/extensions/dashtopanel.conf", dest: "$HOME/.config/dashtopanel.conf" }
      - { url: "{{ dotfiles }}/extensions/tilix.conf", dest: "$HOME/.config/tilix.conf" }
      - { url: "{{ dotfiles }}/extensions/executor.conf", dest: "$HOME/.config/executor.conf" }
      - { url: "{{ dotfiles }}/extensions/poweroffmenu.conf", dest: "$HOME/.config/poweroffmenu.conf" }
      - { url: "{{ dotfiles }}/wallpaper.desktop", dest: "$HOME/.config/autostart/wallpaper.desktop" }
      - { url: "{{ dotfiles }}/flameshot.ini", dest: "$HOME/.config/flameshot/flameshot.ini" }
      - { url: "{{ dotfiles }}/config.fish", dest: "$HOME/.config/fish/config.fish" }
      - { url: "{{ dotfiles }}/mpv.conf", dest: "$HOME/.config/mpv/mpv.conf" }
      - { url: "{{ dotfiles }}/modern.lua", dest: "$HOME/.config/mpv/scripts/modern.lua" }
      - { url: "{{ dotfiles }}/thumbfast.lua", dest: "$HOME/.config/mpv/scripts/thumbfast.lua" }
      - { url: "{{ dotfiles }}/Material-Design-Iconic-Font.ttf", dest: "$HOME/.config/mpv/fonts/Material-Design-Iconic-Font.ttf" }
      - { url: "{{ dotfiles }}/obsprofile.ini", dest: "$HOME/.config/obs-studio/basic/profiles/Untitled/basic.ini" }
      - { url: "{{ dotfiles }}/obsrecorder.json", dest: "$HOME/.config/obs-studio/basic/profiles/Untitled/recordEncoder.json" }
      - { url: "{{ dotfiles }}/obsglobal.ini", dest: "$HOME/.config/obs-studio/global.ini" }
      - { url: "{{ dotfiles }}/yayconfig.json", dest: "$HOME/.config/yay/config.json" }
      - { url: "{{ dotfiles }}/custom-keys.dconf", dest: "$HOME/gnome/custom-keys.dconf" }
      - { url: "{{ dotfiles }}/custom-values.dconf", dest: "$HOME/gnome/custom-values.dconf" }
      - { url: "{{ dotfiles }}/keybindings.dconf", dest: "$HOME/gnome/keybindings.dconf" }
    #6.1 Dotfiles root
    - name: Descargar dotfiles for root
      become: yes
      ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode | default('0644') }}"
        force: yes
      loop:      
      - { url: "{{ dotfiles }}/reflector.conf", dest: "/etc/xdg/reflector/reflector.conf", mode: "0644" }
      - { url: "{{ dotfiles }}/virtualbox.conf", dest: "/etc/modules-load.d/virtualbox.conf", mode: "0644" }
      - { url: "{{ sdconfig }}/wol@.service", dest: "/etc/systemd/system/wol@.service", mode: "0644" }
      - { url: "{{ sdconfig }}/run-media-nas.mount", dest: "/etc/systemd/system/run-media-nas.mount", mode: "0644" }
      - { url: "{{ sdconfig }}/run-media-nas.automount", dest: "/etc/systemd/system/run-media-nas.automount", mode: "0644" }

    # 7. Actualizar la base de datos de pkgfile
    - name: Actualizar base de datos de pkgfile
      become: yes
      ansible.builtin.command: pkgfile --update

    # 8. Instalar AppImage Manager
    - name: Instalar AppImage Manager
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/ivan-hc/AM/main/INSTALL
        dest: /tmp/INSTALL
        mode: '0755'
    - name: Ejecutar instalador de AppImage Manager
      become: yes
      ansible.builtin.command: /tmp/INSTALL

    # 9. Configuraciones adicionales
    - name: Exportar QT_QPA_PLATFORMTHEME
      become: yes
      ansible.builtin.lineinfile:
        path: /etc/environment
        line: "export QT_QPA_PLATFORMTHEME=qt5ct"
        create: yes

    - name: Buscar archivos en /usr/local/bin
      ansible.builtin.find:
        paths: /usr/local/bin
        file_type: file
      register: scripts_encontrados
    - name: Ajustar permisos de scripts root
      become: yes
      ansible.builtin.file:
        path: "{{ item.path }}"
        mode: '0755'
      loop: "{{ scripts_encontrados.files }}"
    - name: Buscar scripts en $HOME/.local/share/nautilus/scripts
      ansible.builtin.find:
        paths: "{{ lookup('env', 'HOME') }}/.local/share/nautilus/scripts"
        patterns: "*.sh"
        file_type: file
      register: nautilus_scripts
    
    - name: Buscar scripts en $HOME
      ansible.builtin.find:
        paths: "{{ lookup('env', 'HOME') }}"
        patterns: "*.sh"
        file_type: file
      register: home_scripts
    
    - name: Ajustar permisos de scripts user
      become: no
      ansible.builtin.file:
        path: "{{ item.path }}"
        mode: '0755'
      loop: "{{ nautilus_scripts.files + home_scripts.files }}"

    - name: Añadir usuario a grupo vboxusers
      become: yes
      ansible.builtin.user:
        name: "{{ the_user }}"
        groups: vboxusers
        append: yes
    - name: Ensure default shell is /bin/fish for "{{ ansible_user }}"
      become: yes
      ansible.builtin.user:
        name: "{{ the_user }}"
        shell: /bin/fish

    # 10. Activar servicios
    - name: Activar servicios del sistema
      become: yes
      ansible.builtin.systemd:
        name: "{{ item }}"
        enabled: true
      loop:
        - gdm.service
        - bluetooth.service
        - reflector.service
        - tailscaled
        - run-media-nas.automount
        - paccache.timer

    - name: Verificar la interfaz primaria
      debug:
        msg: "La interfaz primaria es {{ ansible_facts['default_ipv4']['interface'] }}"

    - name: Activar servicio WOL para la interfaz
      become: yes
      ansible.builtin.systemd:
        name: "wol@{{ ansible_facts['default_ipv4']['interface'] }}.service"
        enabled: true
        state: stopped
        masked: false
        
    # 11. Instalar yay desde AUR
    - name: Clone yay
      git:
        repo: https://aur.archlinux.org/yay-bin.git
        dest: "/tmp/yay"
        update: true
    
    - name: Build and install yay
      become: yes
      command:
        chdir: "/tmp/yay"
        cmd: "makepkg -sfi --noconfirm"
        creates: /usr/bin/yay
        
    - name: Install AUR packages
      become: yes
      shell: /usr/bin/yay -S --noconfirm {{ aur_pkgs }}
      args:
        executable: /bin/bash
      
    - name: Asegurar que Fish Shell esté instalado
      ansible.builtin.package:
        name: fish
        state: present

    - name: Crear directorio para Fisher si no existe
      ansible.builtin.file:
        path: ~/.config/fish/functions
        state: directory
        mode: '0755'

    - name: Ejecutar configuración en Fish Shell
      ansible.builtin.shell: |
        fish <<'EOF'
        set -Ux EDITOR micro
        alias limpiar="paccache -rk1 && paccache -ruk0 && yay -Sc && sudo pacman -Qdtq | sudo pacman -Runs -" && funcsave limpiar
        alias historial="history | fzf" && funcsave historial
        alias cat="bat" && funcsave cat
        alias cc="cd && clear" && funcsave cc
        alias ls="exa -lha --icons" && funcsave ls
        alias mkdir="mkdir -pv" && funcsave mkdir
        alias espacio="gdu /" && funcsave espacio
        alias f34='firefox -P "Cyb_R34" -no-remote' && funcsave f34
        alias orphans='sudo pacman -Qdtq | sudo pacman -Runs  -' && funcsave orphans
        alias rebootuefi='sudo systemctl reboot --firmware-setup' && funcsave rebootuefi
        alias sss="sudo systemctl status" && funcsave sss
        alias ssa="sudo systemctl start" && funcsave ssa
        alias sso="sudo systemctl stop" && funcsave sso
        alias sse="sudo systemctl enable" && funcsave sse
        alias ssd="sudo systemctl daemon-reload" && funcsave ssd
        function buscar; /usr/bin/find . -type f -iname "*$argv*"; end; and funcsave buscar
        function cheat; curl cheat.sh/$argv; end; and funcsave cheat
        function convimg; magick mogrify -path $argv[2] -strip -interlace Plane -quality 80% -format jpg -verbose $argv[1]/*; end; and funcsave convimg
        function img2mp4; for file in *.gif; ffmpeg -i $file "$file.mp4"; end; end; and funcsave img2mp4
        fisher install IlanCosman/tide@v6
        fisher install oh-my-fish/plugin-bang-bang
        EOF
      args:
        executable: /bin/bash  # Asegura que se ejecute desde Bash
        
  handlers:
    - name: Actualizar multilib
      ansible.builtin.lineinfile:
        path: /etc/pacman.conf
        regexp: "^#(\\[multilib\\]|Include)"
        line: "\\1"
        state: present
        backrefs: yes
